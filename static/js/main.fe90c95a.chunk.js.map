{"version":3,"sources":["redux/todosSlice.js","components/AddForm/AddForm.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","App.js","redux/store.js","index.js"],"names":["phonebookReducer","createSlice","name","initialState","items","phone","id","filter","reducers","addPhone","state","payload","push","deletePhone","setFilter","filterPhonebook","toLowerCase","includes","actions","AddFrom","names","useSelector","contacts","map","dispatch","useDispatch","Form","action","onSubmit","e","preventDefault","find","el","target","value","shortid","generate","Group","className","controlId","Label","Control","type","pattern","title","required","Button","variant","Todo","CloseButton","onClick","ContactsList","filteredContacts","ListGroup","length","item","Item","ContactsFilter","onChange","currentTarget","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe90c95a.chunk.js","sourcesContent":["\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nexport const phonebookReducer = createSlice({\r\n  name: 'todos',\r\n  initialState: {\r\n    items: [\r\n      { name: 'denis1', phone: '124-123-123', id: 'qwe1' },\r\n      { name: 'denis2', phone: '125-123-123', id: 'qwe2' },\r\n      { name: 'denis3', phone: '126-123-123', id: 'qwe3' },\r\n      \r\n    ],\r\n    filter:''\r\n  },\r\n  reducers: {\r\n    addPhone: (state, { payload }) => {\r\n      state.items.push(payload)\r\n    },\r\n\r\n    deletePhone: (state, { payload }) => ({\r\n      items: state.items.filter(({ id }) =>\r\n        id !== payload),\r\n      filter: state.filter\r\n    }),\r\n\r\n    setFilter: (state, { payload }) =>\r\n      {state.filter = payload},\r\n    \r\n    filterPhonebook: (state, { payload }) => ({\r\n      items: state.items.filter(({ name }) =>\r\n        name.toLowerCase().includes(payload)),\r\n      filter: payload\r\n    })\r\n      \r\n  },\r\n})\r\n\r\nexport const { addPhone, deletePhone, setFilter, filterPhonebook } = phonebookReducer.actions\r\n\r\nexport default phonebookReducer.reducer","\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { addPhone } from \"../../redux/todosSlice\";\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../../App.css'\r\n\r\nexport default function AddFrom() {\r\n\r\n  const names = useSelector((state) => state.contacts.items.map(({name}) => name))\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitFunc = (e) => {\r\n    e.preventDefault()\r\n    const checkDuplicate = names.find(el => el === e.target.name.value);\r\n    \r\n    return !checkDuplicate && dispatch(addPhone({\r\n      name: e.target.name.value, \r\n      phone: e.target.phone.value, \r\n      id: shortid.generate()\r\n    }))\r\n  }\r\n  return (\r\n    <Form action=\"submit\" onSubmit={onSubmitFunc}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Contact name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n          <Form.Label>Number</Form.Label>\r\n          <Form.Control\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          >Add</Button>\r\n      </Form>\r\n  )\r\n}","import { useDispatch } from \"react-redux\";\r\nimport { deletePhone } from \"../../redux/todosSlice\";\r\nimport { CloseButton } from 'react-bootstrap';\r\nimport '../../App.css'\r\n\r\nexport default function Todo({phone, id, name}) {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"contContact\">\r\n      <span className=\"text\">{`${name}: ${phone}`}</span>\r\n      <CloseButton aria-label=\"Hide\" onClick={() => dispatch(deletePhone(id))} />\r\n    </div>\r\n  )\r\n}","import { useSelector } from \"react-redux\"\r\nimport Contact from '../Contact/Contact';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport '../../App.css'\r\nexport default function ContactsList() {\r\n\r\n  const contacts = useSelector((state) => state.contacts.items)\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n\r\n  const filteredContacts = () =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter))\r\n  \r\n  return (\r\n    <ListGroup>\r\n      {\r\n        filteredContacts()?.length > 0\r\n          ?\r\n          filteredContacts().map(item =>\r\n            <ListGroup.Item key={item?.id}>\r\n              <Contact\r\n                id={item?.id}\r\n                name={item?.name}\r\n                phone={item.phone} />\r\n            </ListGroup.Item>)\r\n          :\r\n          <h3>No matches</h3>}\r\n    </ListGroup>\r\n  )\r\n}","\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/todosSlice\";\r\nimport { Form } from 'react-bootstrap';\r\nimport '../../App.css'\r\nexport default function ContactsFilter() {\r\n\r\n  const dispatch = useDispatch();\r\n  const inputValueHandler = (e) => dispatch(setFilter(e.currentTarget.value));\r\n  \r\n  return (\r\n    <Form >\r\n      <Form.Group className=\"mb-3\" >\r\n        <Form.Label>Filter</Form.Label>\r\n        <Form.Control\r\n          type=\"text\" onChange={inputValueHandler}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  )\r\n}","import AddFrom from \"./components/AddForm/AddForm\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport ContactsFilter from \"./components/ContactsFilter/ContactsFilter\";\nimport './App.css'\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <AddFrom />\n      <ContactsFilter />\n      <ContactsList />\n    </div>\n  )\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport phonebookReducer from './todosSlice'\r\n\r\nexport const store = configureStore({\r\n  // reducer: {\r\n  //   todos: todosReducer,\r\n  // },\r\n  reducer: {\r\n    contacts: phonebookReducer\r\n  }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}